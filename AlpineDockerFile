# HEY DON'T USE THIS DOCKER FILE IT WON'T WORK
# Due to incompatibilities with musl libc and openttd / lzma, you'll crash as soon as a client connects
# It's here as reference in case this ever changes
# Just use the main Debian / glibc-based Dockerfile

# BUILD ENVIRONMENT
FROM alpine:latest AS build
MAINTAINER Andrew Leach <me@duck.me.uk>

ARG OPENTTD_VERSION="1.9.1"
ARG OPENGFX_VERSION="0.5.2"
ENV GLIBC_PKG_VERSION="2.28-r0"


# Install glibc extensions
RUN apk add --no-cache --update-cache curl ca-certificates bash && \
  curl -Lo /etc/apk/keys/sgerrand.rsa.pub "https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub" && \
  chmod 644 /etc/apk/keys/sgerrand.rsa.pub && \
  curl -Lo glibc-${GLIBC_PKG_VERSION}.apk "https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_PKG_VERSION}/glibc-${GLIBC_PKG_VERSION}.apk" && \
  curl -Lo glibc-bin-${GLIBC_PKG_VERSION}.apk "https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_PKG_VERSION}/glibc-bin-${GLIBC_PKG_VERSION}.apk" && \
  curl -Lo glibc-i18n-${GLIBC_PKG_VERSION}.apk "https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_PKG_VERSION}/glibc-i18n-${GLIBC_PKG_VERSION}.apk" && \
  apk add glibc-${GLIBC_PKG_VERSION}.apk glibc-bin-${GLIBC_PKG_VERSION}.apk glibc-i18n-${GLIBC_PKG_VERSION}.apk

# Get things ready
RUN mkdir -p /config \
    && mkdir -p /data \
    && mkdir /tmp/build \
    && mkdir /tmp/src

# Install some build dependencies (we remove these later to save space)
RUN apk --no-cache add \
    unzip \
    g++ \
    make \
    patch \
    git \
    zlib-dev \
    lzo-dev \
    xz-dev

# Build OpenTTD itself
WORKDIR /tmp/src

RUN git clone https://github.com/OpenTTD/OpenTTD.git . \
    && git fetch --tags \
    && git checkout ${OPENTTD_VERSION}

RUN /tmp/src/configure \
    --enable-dedicated \
    --binary-dir=bin \
    --prefix-dir=/tmp/build \
    --personal-dir=/config \
    —-enable-debug

RUN make -j"$(nproc)" \
    && make install

## Install OpenGFX
RUN mkdir -p /tmp/build/share/games/openttd/baseset/ \
    && cd /tmp/build/share/games/openttd/baseset/ \
    && wget -q http://bundles.openttdcoop.org/opengfx/releases/${OPENGFX_VERSION}/opengfx-${OPENGFX_VERSION}.zip \
    && unzip opengfx-${OPENGFX_VERSION}.zip \
    && tar -xf opengfx-${OPENGFX_VERSION}.tar \
    && rm -rf opengfx-*.tar opengfx-*.zip


# END BUILD ENVIRONMENT
# DEPLOY ENVIRONMENT
FROM alpine:latest
MAINTAINER duck. <me@duck.me.uk>

ARG OPENTTD_VERSION="1.8.0"
ARG OPENGFX_VERSION="0.5.2"
ENV GLIBC_PKG_VERSION="2.28-r0"

# Setup the environment
RUN mkdir -p /config \
    && mkdir -p /data \
    && mkdir /tmp/build \
    && adduser -h /config -u 911 -s /bin/false -D openttd

# Install glibc extensions
RUN apk add --no-cache --update-cache curl ca-certificates bash && \
  curl -Lo /etc/apk/keys/sgerrand.rsa.pub "https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub" && \
  chmod 644 /etc/apk/keys/sgerrand.rsa.pub && \
  curl -Lo glibc-${GLIBC_PKG_VERSION}.apk "https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_PKG_VERSION}/glibc-${GLIBC_PKG_VERSION}.apk" && \
  curl -Lo glibc-bin-${GLIBC_PKG_VERSION}.apk "https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_PKG_VERSION}/glibc-bin-${GLIBC_PKG_VERSION}.apk" && \
  curl -Lo glibc-i18n-${GLIBC_PKG_VERSION}.apk "https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_PKG_VERSION}/glibc-i18n-${GLIBC_PKG_VERSION}.apk" && \
  apk add glibc-${GLIBC_PKG_VERSION}.apk glibc-bin-${GLIBC_PKG_VERSION}.apk glibc-i18n-${GLIBC_PKG_VERSION}.apk

WORKDIR /config

# Install runtime dependencies
RUN apk --no-cache add \
    g++ \
    zlib \
    lzo \
    xz

# Copy from build environment
COPY --from=build /tmp/build /tmp/build

# Add the entrypoint
ADD entrypoint.sh /usr/local/bin/entrypoint

RUN chown -R openttd:openttd /config

# Expose the volumes
VOLUME /config
VOLUME /data

# Expose the gameplay port
EXPOSE 3979/tcp
EXPOSE 3979/udp

# Expose the admin port
EXPOSE 3977/tcp

# Finally, let's run OpenTTD!
USER openttd
CMD /usr/local/bin/entrypoint
